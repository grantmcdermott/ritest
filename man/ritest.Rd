% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ritest.R
\name{ritest}
\alias{ritest}
\title{Perform random inference on a model object}
\usage{
ritest(
  resampvar,
  object,
  reps = 100,
  pvals = c("both", "left", "right"),
  strata = NULL,
  cluster = NULL,
  level = 0.95,
  seed = NULL,
  stack = FALSE,
  parallel = TRUE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{resampvar}{Character. The name of the variable (coefficient) that you want
to test. At present, only a single variable is permitted.}

\item{object}{Model object containing the `resampvar` variable. At present,
only `stats::lm` and `fixest::feols` models are supported.}

\item{reps}{Integer. The number of repetitions (permutations) in the RI
simulation. Default is 100, but you probably want more that that. (Alwyn
Young has suggested at least 2000 in a research setting.)}

\item{pvals}{Character. How should the test values should be computed? The
default is "both", which means that two-sided p-values will be computed.
Alternatively, users can specify one-sided p-values with either "left" or
"right".}

\item{strata}{Character or one-sided formula. Permute `resampvar` within
strata? See Details and Examples below.}

\item{cluster}{Character or one-sided formula. Keep `resampvar` constant
within clusters? See Details and Examples below.#'}

\item{level}{Numeric. The desired confidence level. Default if 0.95.}

\item{seed}{Integer. Random seed for reproducible results.}

\item{stack}{Logical. Should the permuted data be stacked in memory? Ignored
if neither `strata` or `cluster` are defined. See Details.}

\item{parallel}{Logical. Should the permuted fits be executed in parallel?
Passed to `parallel::mclapply` and thus ignored if Windows is detected.}

\item{verbose}{Logical. Display the underlying model `object` summary and
`ritest` return value? Default is `FALSE`.}

\item{...}{Additional arguments. Currently ignored.}
}
\value{
An list object of class `ritest`. Default print and plotting methods
  are supported.
}
\description{
Perform random inference (RI) testing on a model object, e.g. a
  coefficient from a linear regression model. It tries to mimic the `ritest`
  Stata routine (Heß, 2017) in its design and functionality. The package is
  quite experimental and only a subset of this functionality is currently
  supported. However, it does appear to be significantly faster.
}
\details{
This function is experimental and functionality is still quite
  limited. Albeit, that it does support the most likely use case for RI on a
  regression model, i.e. permutation testing of a coefficient value. Present
  limitations include: only `lm` and `fixest::feols` model objects are
  supported; only one permutation (RI) test is allowed; and only one strata
  and/or cluster variable, respectively, can be supplied. I hope to resolve
  these limitations as time permits.
}
\examples{
library(fixest)
mod = feols(yield ~ N + P + K | block, data = npk)

# Conduct RI on the 'N' (nitrogen) coefficient. We'll do 1,000 simulations
# and permute within the 'block' variable strata. The 'verbose = TRUE'
# argument simply prints the results upon completion.
mod_ri = ritest('N', mod, reps = 1e3, strata = ~block, verbose = TRUE)

# We can also plot the results and various options are available to
# customise the appearance.
plot(mod_ri)
plot(mod_ri, highlight_par = TRUE) ## Add the parametric CI lines
}
\references{
Simon Heß (2017)
\cite{Robust Randomization inference with Stata: A guide and software}, The
Stata Journal, 17, Number 3, pp. 630--651
}
\seealso{
[print.ritest()], [plot.ritest()]
}
